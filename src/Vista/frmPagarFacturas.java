/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Vista;

import Modelo.Cliente;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author megap
 */
public class frmPagarFacturas extends javax.swing.JFrame {
    
    //Atributos de frmPagarFacturas
    private frmPagoLinea frmPagoLinea;   
    private frmMenu frmMenu;
    private DefaultTableModel modelo;
    private Cliente Cliente;

    /**
     * Creates new form frmSolicitarLinea
     */
    
    //Constrctor parametrizado
    public frmPagarFacturas(Cliente Cliente) {       
        initComponents();
        this.Cliente = Cliente;
        iniciarTabla();
        cargarFacturaTabla(Controlador.ControladorFactura.obtenerDatosFacturas(Cliente.getIdUusario()));
        
        tableFacturas.addMouseListener(new java.awt.event.MouseAdapter() {
            
        @Override
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                int row = tableFacturas.rowAtPoint(evt.getPoint());
                if (row >= 0 && evt.getClickCount() == 2) { // Detecta doble clic
                    abrirFormulario(row);
                }
            }
        });
    }
    
    public frmPagarFacturas (){
        initComponents();
    }

    //Metodos getters y setters
    public frmMenu getFrmMenu() {
        return frmMenu;
    }
    public void setFrmMenu(frmMenu frmMenu) {
        this.frmMenu = frmMenu;
    }  
    public frmPagoLinea getFrmPagoLinea() {
        return frmPagoLinea;
    }
    public void setFrmPagoLinea(frmPagoLinea frmPagoLinea) {
        this.frmPagoLinea = frmPagoLinea;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        labelSoliLinea = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableFacturas = new javax.swing.JTable();
        comboSeleccionarFactura = new javax.swing.JComboBox<>();
        labelSelecciona = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        btnAtras = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Pagar Lineas");
        setMinimumSize(new java.awt.Dimension(868, 612));

        jPanel1.setBackground(new java.awt.Color(0, 102, 102));
        jPanel1.setForeground(new java.awt.Color(0, 0, 0));
        jPanel1.setMaximumSize(new java.awt.Dimension(868, 612));
        jPanel1.setMinimumSize(new java.awt.Dimension(868, 612));
        jPanel1.setPreferredSize(new java.awt.Dimension(868, 612));

        labelSoliLinea.setFont(new java.awt.Font("Arial", 0, 48)); // NOI18N
        labelSoliLinea.setForeground(new java.awt.Color(255, 255, 255));
        labelSoliLinea.setText("PAGAR TUS LINEAS");

        jPanel2.setPreferredSize(new java.awt.Dimension(798, 376));

        tableFacturas.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        tableFacturas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tableFacturas);

        comboSeleccionarFactura.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        comboSeleccionarFactura.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "TODOS", "PENDIENTE", "PAGADA", "VENCIDO" }));
        comboSeleccionarFactura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboSeleccionarFacturaActionPerformed(evt);
            }
        });

        labelSelecciona.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        labelSelecciona.setText("Estado Pago:");

        jLabel1.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel1.setText("Haga 2 veces en una fila para pagarla");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(61, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(labelSelecciona)
                        .addGap(28, 28, 28)
                        .addComponent(comboSeleccionarFactura, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(199, 199, 199))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 545, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(57, 57, 57))))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(177, 177, 177)
                .addComponent(jLabel1)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboSeleccionarFactura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelSelecciona))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33))
        );

        btnAtras.setBackground(new java.awt.Color(0, 102, 102));
        btnAtras.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/Atras.png"))); // NOI18N
        btnAtras.setBorder(null);
        btnAtras.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnAtras.setMaximumSize(new java.awt.Dimension(45, 55));
        btnAtras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtrasActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnAtras, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(155, 155, 155)
                .addComponent(labelSoliLinea)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(107, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 663, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(98, 98, 98))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnAtras, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(70, 70, 70))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(labelSoliLinea)
                        .addGap(27, 27, 27)))
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 432, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(53, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //Boton para volver al anterior frm
    private void btnAtrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtrasActionPerformed
        frmMenu.setFrmPagarLineas(this);
        frmMenu.setVisible(true);
        comboSeleccionarFactura.setSelectedItem("TODOS");
        this.setVisible(false);   
        dispose();
    }//GEN-LAST:event_btnAtrasActionPerformed
    
    //Combobox que filtra los datos de la tabla
    private void comboSeleccionarFacturaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboSeleccionarFacturaActionPerformed
       String estadoSeleccionado = (String) comboSeleccionarFactura.getSelectedItem();
    
        filtrarPorEstado(estadoSeleccionado);
    }//GEN-LAST:event_comboSeleccionarFacturaActionPerformed
    
    
    //Metodo que inicializa la tabla
    private void iniciarTabla(){
        modelo = new DefaultTableModel(){

            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };        
        
        modelo.addColumn("ID");
        modelo.addColumn("Telefono");
        modelo.addColumn("Plan");
        modelo.addColumn("Total S/.");
        modelo.addColumn("F. Emision");
        modelo.addColumn("F. Vencimiento");
        modelo.addColumn("Estado");
        
        tableFacturas.setModel(modelo);
        
        tableFacturas.getTableHeader().setReorderingAllowed(false);

        tableFacturas.getColumnModel().getColumn(0).setPreferredWidth(10);
        tableFacturas.getColumnModel().getColumn(1).setPreferredWidth(50);
        tableFacturas.getColumnModel().getColumn(2).setPreferredWidth(60);
        tableFacturas.getColumnModel().getColumn(3).setPreferredWidth(40);
        tableFacturas.getColumnModel().getColumn(4).setPreferredWidth(75);  
        tableFacturas.getColumnModel().getColumn(5).setPreferredWidth(75);
        tableFacturas.getColumnModel().getColumn(6).setPreferredWidth(60);
        tableFacturas.setRowHeight(30);
    }
    
    
    //Metodo que carga los datos en la tabla
    public void cargarFacturaTabla(ArrayList<Object[]> datos){
        
        modelo.setRowCount(0);
        
        for (Object[] fila : datos) {
            modelo.addRow(fila); // Agregar cada fila al modelo
        }
    }
    
    //Metodo que filtra los datos en la tabla
    private void filtrarPorEstado(String estado) {
        ArrayList<Object[]> datosFiltrados;

        if (estado.equals("TODOS")) {
            datosFiltrados = Controlador.ControladorFactura.obtenerDatosFacturas(Cliente.getIdUusario()); // Cargar todos los datos
        } else {
            datosFiltrados = new ArrayList<>();
            for (Object[] fila : Controlador.ControladorFactura.obtenerDatosFacturas(Cliente.getIdUusario())) {
                if (fila[6].equals(estado)) { // Compara con la columna que tiene el estado de pago
                    datosFiltrados.add(fila);
                }
            }
        }
        cargarFacturaTabla(datosFiltrados); // Actualizar la tabla con los datos filtrados
    }
    
    //Metodo que abre el formulario de pago (frmPagoLinea)
    public void abrirFormulario(int row){
        
        String estadoPago = (String) modelo.getValueAt(row, 6);
        
        if (estadoPago.equals("PAGADA")){
            JOptionPane.showMessageDialog(this, "La factura ya está pagada.", "Información", JOptionPane.INFORMATION_MESSAGE);
        } else {
            int idFactura = (int) modelo.getValueAt(row, 0);
            String idCliente = Cliente.getIdUusario();
            int telefono = (int) modelo.getValueAt(row, 1); 
            String idPlan = (String) modelo.getValueAt(row, 2);   
            double Total = (double) modelo.getValueAt(row, 3);
        
            Object [] Valores = new Object[]{idFactura, idCliente, telefono, idPlan, Total};

            // Pasar los datos al nuevo formulario
            if (frmPagoLinea == null){
                frmPagoLinea = new frmPagoLinea(Valores);
                frmPagoLinea.setFrmPagarFacturas(this);
            } else {
                frmPagoLinea.setValores(Valores);
            }
            frmPagoLinea.setVisible(true);
        }
    }
    
    //Override que carga los datos de la tabla cuando se abre el frm
    @Override
    public void setVisible(boolean visible) {
        super.setVisible(visible);  // Llama al setVisible original para mostrar el formulario
        if (visible) {
        cargarFacturaTabla(Controlador.ControladorFactura.obtenerDatosFacturas(Cliente.getIdUusario()));  // Recarga las líneas cuando se vuelve a hacer visible
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmPagarFacturas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmPagarFacturas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmPagarFacturas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmPagarFacturas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmPagarFacturas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAtras;
    private javax.swing.JComboBox<String> comboSeleccionarFactura;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelSelecciona;
    private javax.swing.JLabel labelSoliLinea;
    private javax.swing.JTable tableFacturas;
    // End of variables declaration//GEN-END:variables
}
