/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Vista;

import Controlador.ControladorFactura;
import Modelo.Cliente;
import Modelo.Factura;
import Modelo.Linea;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import Modelo.Paquete;

/**
 *
 * @author megap
 */
public class frmRecargar extends javax.swing.JFrame {
    
    //Atributos de frmRecargar
    private frmMenu frmMenu;
    private DefaultTableModel modelo;
    private Cliente Cliente;
    private ArrayList<Linea> Lineas;
    private frmRecargarLinea frmRecargarLinea;

    /**
     * Creates new form frmSolicitarLinea
     */
    
    //Metodo parametrizado
    public frmRecargar(Cliente Cliente) {
        this.Cliente = Cliente;
        initComponents();
        inicializarTabla();
        cargarCombo();
        comboxCantidad.setEnabled(false);

        jtPaquetes.addMouseListener(new java.awt.event.MouseAdapter() {
        @Override
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                int row = jtPaquetes.rowAtPoint(evt.getPoint());
                if (row >= 0 && evt.getClickCount() == 2) { // Detecta doble clic
                    cambiarPaquete(row);
                }
            }
        });
    }
    
    public frmRecargar (){
        initComponents();
    }

    //Metodos getters y setters
    public frmMenu getFrmMenu() {
        return frmMenu;
    }
    public void setFrmMenu(frmMenu frmMenu) {
        this.frmMenu = frmMenu;
    }  
    public frmRecargarLinea getFrmRecargarLinea() {
        return frmRecargarLinea;
    }
    public void setFrmRecargarLinea(frmRecargarLinea frmRecargarLinea) {
        this.frmRecargarLinea = frmRecargarLinea;
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        labelSoliLinea = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtPaquetes = new javax.swing.JTable();
        btnPagar = new javax.swing.JButton();
        comboxCantidad = new javax.swing.JComboBox<>();
        labelLinea = new javax.swing.JLabel();
        tbtnIncluirPlanes = new javax.swing.JToggleButton();
        labelIncluir = new javax.swing.JLabel();
        labelCantidad = new javax.swing.JLabel();
        labelPlan = new javax.swing.JLabel();
        labelPonerPlan = new javax.swing.JLabel();
        labelMostrarPlanes = new javax.swing.JLabel();
        cbTelefono = new javax.swing.JComboBox<>();
        btnAtras = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Recatgar o Comprar");
        setMinimumSize(new java.awt.Dimension(868, 612));

        jPanel1.setBackground(new java.awt.Color(0, 102, 102));
        jPanel1.setForeground(new java.awt.Color(0, 0, 0));
        jPanel1.setMaximumSize(new java.awt.Dimension(868, 612));
        jPanel1.setMinimumSize(new java.awt.Dimension(868, 612));
        jPanel1.setPreferredSize(new java.awt.Dimension(868, 612));

        labelSoliLinea.setFont(new java.awt.Font("Tempus Sans ITC", 1, 36)); // NOI18N
        labelSoliLinea.setForeground(new java.awt.Color(255, 255, 255));
        labelSoliLinea.setText("COMPRA O RECARGA");

        jPanel2.setPreferredSize(new java.awt.Dimension(798, 376));

        jtPaquetes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jtPaquetes);

        btnPagar.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        btnPagar.setText("Pagar");
        btnPagar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPagarActionPerformed(evt);
            }
        });

        comboxCantidad.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        comboxCantidad.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10" }));

        labelLinea.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        labelLinea.setText("Telefono:");

        tbtnIncluirPlanes.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        tbtnIncluirPlanes.setText("No");
        tbtnIncluirPlanes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tbtnIncluirPlanesActionPerformed(evt);
            }
        });

        labelIncluir.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        labelIncluir.setText("Incluir algun plan:");

        labelCantidad.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        labelCantidad.setText("Cantidad:");

        labelPlan.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        labelPlan.setText("Paquete:");

        labelPonerPlan.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        labelPonerPlan.setText("...");

        labelMostrarPlanes.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        labelMostrarPlanes.setForeground(new java.awt.Color(0, 0, 0));
        labelMostrarPlanes.setText("Haz click dos veces para seleccionar un paquete:");

        cbTelefono.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        cbTelefono.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbTelefonoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(labelIncluir)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tbtnIncluirPlanes)
                        .addGap(32, 32, 32)
                        .addComponent(labelCantidad)
                        .addGap(3, 3, 3)
                        .addComponent(comboxCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(labelPlan)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(labelPonerPlan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addGap(195, 195, 195)
                        .addComponent(labelLinea)
                        .addGap(46, 46, 46)
                        .addComponent(cbTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addGap(135, 135, 135)
                        .addComponent(labelMostrarPlanes))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addGap(266, 266, 266)
                        .addComponent(btnPagar)))
                .addGap(84, 84, 84))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 551, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(53, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(labelMostrarPlanes)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelIncluir)
                    .addComponent(tbtnIncluirPlanes)
                    .addComponent(labelCantidad)
                    .addComponent(comboxCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelPlan)
                    .addComponent(labelPonerPlan))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(labelLinea))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(cbTelefono)
                        .addGap(2, 2, 2)))
                .addGap(18, 18, 18)
                .addComponent(btnPagar)
                .addGap(30, 30, 30))
        );

        btnAtras.setBackground(new java.awt.Color(0, 102, 102));
        btnAtras.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/Atras.png"))); // NOI18N
        btnAtras.setBorder(null);
        btnAtras.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnAtras.setMaximumSize(new java.awt.Dimension(45, 55));
        btnAtras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtrasActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnAtras, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(173, 173, 173)
                        .addComponent(labelSoliLinea))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(110, 110, 110)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 645, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(113, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnAtras, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelSoliLinea))
                .addGap(33, 33, 33)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 460, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(59, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //Boton para devolver al anterior frm
    private void btnAtrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtrasActionPerformed
        frmMenu.setFrmRecargar(this);
        frmMenu.setVisible(true);
        this.setVisible(false);      
        labelPonerPlan.setText("");
    }//GEN-LAST:event_btnAtrasActionPerformed

    //Metodo que carga el combo box
    private void cargarCombo (){
        
        cbTelefono.removeAllItems();
        Lineas = Cliente.getLineas();
        
        for(Linea linea: Lineas){
            if(linea.getPlan().contains("PRE") && !linea.getEstado().equals("CANCELADA") && !linea.getEstado().contains("EMP")){
                cbTelefono.addItem(String.valueOf(linea.getTelefono()));
            }
        }
    }
    
    private void cbTelefonoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbTelefonoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbTelefonoActionPerformed
    
    //Boton mantenido que cambia entre si pagar la linea o comprar paquetes
    private void tbtnIncluirPlanesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tbtnIncluirPlanesActionPerformed
        // TODO add your handling code here:
        if (tbtnIncluirPlanes.isSelected()) {
                tbtnIncluirPlanes.setText("Si");
                comboxCantidad.setEnabled(true);
            } else {
                tbtnIncluirPlanes.setText("No");
                labelPonerPlan.setText("");
                comboxCantidad.setEnabled(false);
            }
    }//GEN-LAST:event_tbtnIncluirPlanesActionPerformed

    //Boton que hace que el metodo pagar funcione
    private void btnPagarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPagarActionPerformed
        // TODO add your handling code here:
        int row = jtPaquetes.getSelectedRow();
        
        if (!tbtnIncluirPlanes.isSelected()){
            row = 0;
        } 
        
        if (row >= 0) {  // Verificar que haya una fila seleccionada
            pagar(row);           
        } else {
        // Mostrar mensaje si no hay fila seleccionada
            JOptionPane.showMessageDialog(this, "Por favor, seleccione un paquete para pagar.");
        }
    }//GEN-LAST:event_btnPagarActionPerformed
    
    //Metodo que crea la factura y detalle factura dependiendo del btnIncluir planes esta mantenido o no
    public void pagar(int row){       
        
        double precioUnitario = (double) modelo.getValueAt(row, 2);
        String selectCombo = (String) comboxCantidad.getSelectedItem();
        int Cantidad = (int) Integer.parseInt(selectCombo);
        int duracion = (int) modelo.getValueAt(row, 3);
        double Total = Cantidad * precioUnitario;
        int index = cbTelefono.getSelectedIndex(); 
        int idLinea = 0;
        int Telefono = 0;
        int idPaquete = (int) modelo.getValueAt(row, 0);
        String Descripcion = (String) modelo.getValueAt(row, 1);
        
        if (index >= 0 && Lineas != null && index < Lineas.size() && Cliente != null) {
                Linea lineaSeleccionada = Lineas.get(index);
                idLinea = lineaSeleccionada.getIdLinea();
                Telefono = lineaSeleccionada.getTelefono();
            }
        
        if (tbtnIncluirPlanes.isSelected()){ 
            
            Factura Factura = Controlador.ControladorFactura.nuevaFactura(Cliente.getIdUusario(), Total, duracion);
            Cliente.getFacturas().add(Factura);                 
            ControladorFactura.nuevoDetalleDactura(Factura.getIdFactura(), idLinea, idPaquete,
                            "Comprando Paquete", 0, Cantidad, precioUnitario);
            Object[] Valores = {Telefono, Descripcion, Cantidad, Total, Factura.getIdFactura(), 
            Cliente.getIdUusario(), idLinea};
            if (frmRecargarLinea == null){
                frmRecargarLinea = new frmRecargarLinea(Valores);
                frmRecargarLinea.setFrmRecargar(this);
            } else{
                frmRecargarLinea.setValores(Valores);
            }
            frmRecargarLinea.setVisible(true);
            
        } else {
            
            double precio = Controlador.ControladorFactura.obtenerPrecioLinea(idLinea);
            Factura Factura = Controlador.ControladorFactura.nuevaFactura(Cliente.getIdUusario(), Total, duracion);
            Cliente.getFacturas().add(Factura);  
            ControladorFactura.nuevoDetalleDactura(Factura.getIdFactura(), idLinea, null,
                            "Recargar Linea", precio, 0, 0);
             Object[] Valores = {Telefono, Descripcion, Cantidad, Total, Factura.getIdFactura(), 
            Cliente.getIdUusario(), idLinea};
  
            if (frmRecargarLinea == null){
                frmRecargarLinea = new frmRecargarLinea(Valores);
                frmRecargarLinea.setFrmRecargar(this);
            } else {
                frmRecargarLinea.setValores(Valores);
            }
            frmRecargarLinea.setVisible(true);
        }
        frmMenu.setCliente(Cliente);       
    }
    
    //Metodo que carga la tabla
    private void inicializarTabla(){
        modelo = new DefaultTableModel(){

            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };        
        
        modelo.addColumn("ID");
        modelo.addColumn("Descripcion");
        modelo.addColumn("Precio S/.");
        modelo.addColumn("Duracion");
        
        jtPaquetes.setModel(modelo);
        
        jtPaquetes.getTableHeader().setReorderingAllowed(false);

        jtPaquetes.getColumnModel().getColumn(0).setPreferredWidth(10);
        jtPaquetes.getColumnModel().getColumn(1).setPreferredWidth(60);
        jtPaquetes.getColumnModel().getColumn(2).setPreferredWidth(40);
        jtPaquetes.getColumnModel().getColumn(3).setPreferredWidth(30);    

        jtPaquetes.setRowHeight(30);
    }
    
    //Cambia el label por el paquete seleccionado
    public void cambiarPaquete(int row){
        String Descripcion = (String) modelo.getValueAt(row, 1);
        labelPonerPlan.setText(Descripcion);
    }
    
    //Cargar las lineas prepago en cbTelefono
    public void cargarLineaTabla(ArrayList<Paquete> datos) {

        modelo.setRowCount(0);

        for (Paquete fila: datos){
            
            Object[] row = new Object[5]; 
            row[0] = fila.getIdPaquete();  
            row[1] = fila.getDescripcion();
            row[2] = fila.getPrecioUnitario();
            row[3] = fila.getDuracionDias();

            modelo.addRow(row);
        }
    }
    
    //Override para que recargue la tabla y el combobox
    @Override
    public void setVisible(boolean visible) {
        super.setVisible(visible);  // Llama al setVisible original para mostrar el formulario
        if (visible) {
            cargarLineaTabla(Controlador.ControladorPaquete.obtenerDatosPaquetes());
            cargarCombo();
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmRecargar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmRecargar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmRecargar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmRecargar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmRecargar().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAtras;
    private javax.swing.JButton btnPagar;
    private javax.swing.JComboBox<String> cbTelefono;
    private javax.swing.JComboBox<String> comboxCantidad;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jtPaquetes;
    private javax.swing.JLabel labelCantidad;
    private javax.swing.JLabel labelIncluir;
    private javax.swing.JLabel labelLinea;
    private javax.swing.JLabel labelMostrarPlanes;
    private javax.swing.JLabel labelPlan;
    private javax.swing.JLabel labelPonerPlan;
    private javax.swing.JLabel labelSoliLinea;
    private javax.swing.JToggleButton tbtnIncluirPlanes;
    // End of variables declaration//GEN-END:variables
}
